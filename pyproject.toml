[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "autoinsights"
version = "1.0.0"
description = "A comprehensive Business Intelligence platform for automated data analysis, churn prediction, and revenue forecasting"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AutoInsights Team", email = "contact@autoinsights.com"}
]
keywords = ["machine-learning", "business-intelligence", "data-science", "streamlit", "flask", "mysql"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "streamlit>=1.28.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.1.0",
    "xgboost>=1.6.0",
    "lightgbm>=3.3.0",
    "plotly>=5.13.0",
    "seaborn>=0.12.0",
    "matplotlib>=3.6.0",
    "flask>=2.3.0",
    "sqlalchemy>=1.4.0",
    "mysql-connector-python>=8.0.0",
    "pycaret>=3.0.0",
    "joblib>=1.2.0",
    "altair>=4.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "isort>=5.0",
]

[project.urls]
Homepage = "https://github.com/your-username/autoinsights"
Documentation = "https://github.com/your-username/autoinsights#readme"
Repository = "https://github.com/your-username/autoinsights"
"Bug Tracker" = "https://github.com/your-username/autoinsights/issues"

[project.scripts]
autoinsights = "app:main"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"] 